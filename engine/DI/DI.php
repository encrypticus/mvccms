<?php
/**
 * Класс-контейнер, который хранит в себе все необходимые для работы системы объекты, такие как объект роутера, базы
 * данных и другие. Все объекты хранятся в элементах ассоциативного массива. Смысл класса в том, чтобы записать все объекты
 * в один объект-контейнер и иметь доступ к нему из любого места системы, как единой точке входа
 */

namespace Engine\DI;


class DI {
    /**
     * @var array ассоциативный массив для хранения зависимостей - списка объектов ядра системы - роутера, объекта базы
     * данных и других объектов. По сути зависимость - это элемент массива. Ключ элемента массива - это строка с названием
     * зависимости, а значение элемента - это хранимый объект
     */
    private $container = [];

    /**
     * добавляет элемент в контейнер (элемент в массив)
     * @param $key ключ элемента массива
     * @param $value значение элемента массива
     * @return $this
     */
    public function set($key, $value) {
        $this->container[$key] = $value;
        return $this;
    }

    /**
     * возвращает элемент контейнера по ключу, если такой элемент существует или null, если такого элемента не существует
     * @param $key
     * @return mixed
     */
    public function get($key) {
        return $this->has($key);
    }

    /**
     * проверяет - существует ли переданный элемент в контейнере и в зависимости от этого возвращает этот элемент или null
     * @param $key
     * @return bool
     */
    public function has($key) {
        return isset($this->container[$key]) ? $this->container[$key] : null;
    }

}